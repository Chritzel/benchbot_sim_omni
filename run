#!/usr/bin/env bash

################################################################################
########################### Configuration & helpers ############################
################################################################################

set -euo pipefail
IFS=$'\n\t'
abs_path=$(readlink -f $0)

DEFAULT_POSE="1,0,0,0,0,0,0"

usage_text="$(basename "$abs_path") -- BenchBot simulator daemon for Omniverse-powered Isaac Sim

USAGE:

    Start the daemon:
        $(basename "$abs_path")
        $(basename "$abs_path") -p /path/to/python.sh -P 8080


    Print this help information:
        $(basename "$abs_path") [-h|--help]

OPTION DETAILS:

    -h, --help             
            Show this help menu.

    -p,--python-sh-path
            Path to the 'python.sh' environment script included with your Isaac
            Sim installation. Will recursively search for the script in the
            current directory if this flag is not provided.

    -P,--port
            Port the daemon will bind to.


INTERACTING WITH THE DAEMON:

    The daemon responds to HTTP requests. 

    Following routes are supported:

    /open_environment
            Opens a new environment, with USD path specified via 'environment'
            data field
    /place_robot
            Places a robot at a specified pose. Robot USD is specified via
            'robot' data field, and start pose via a comma-separated 7-tuple in
            the 'pose' field. Format for pose is:

                    quat_w,quat_x,quat_y,quat_z,pos_x,pos_y,pos_z

    /restart
            Restarts the entire simulator (generally not needed)

FURTHER DETAILS:
    
    Please contact the authors of BenchBot for support or to report bugs:
        b.talbot@qut.edu.au
    "

################################################################################
################################# Main script ##################################
################################################################################

# Safely parse options
_args="help,map-path:,object-labels:,robot-path:,start-pose:"
parse_out=$(getopt -o hm:o:r:s: --long $_args -n "$(basename "$abs_path")" \
  -- "$@")
if [ $? != 0 ]; then exit 1; fi
eval set -- "$parse_out"
map_path=
object_labels=
python_sh_path=
robot_path=
start_pose="$DEFAULT_POSE"
while true; do
  case "$1" in
    -h|--help)
      echo "$usage_text"; exit 0 ;;
    -m|--map-path)
      map_path="$2"; shift 2 ;;
    -o|--object-labels)
      object_labels="$2"; shift 2 ;;
    -p|--python-sh-path)
      python_sh_path="$2"; shift 2 ;;
    -r|--robot-path)
      robot_path="$2"; shift 2 ;;
    -s|--start-pose)
      start_pose="$2"; shift 2 ;;
    --)
      shift ; break ;;
    *)
      echo "$(basename "$abs_path"): option '$1' is unknown"; shift ; exit 1 ;;
  esac 
done

# Handle error conditions
if [ -z "$map_path" ]; then
  printf "ERROR: Path to map USD is required via --map-path option.\n"
  exit 1
fi
if [ -z "$robot_path" ]; then
  printf "ERROR: Path to robot USD is required via --robot-path option.\n"
  exit 1
fi
if [ ! -z "$object_labels" ]; then
  # TODO handle object labels
  printf "ERROR: Object labels option is currently unsupported.\n"
  exit 1
fi

# Make available corrections to input arguments
start_pose="$(echo "$start_pose" | sed 's/ //g; s/^\[//; s/\]$//')"

# Derive any missing values
if [ -z "$python_sh_path" ]; then
  printf "No python_sh_path provided. Guessing ... \n"
  python_sh_path="$(find . -name 'python.sh' 2>/dev/null | \
    awk '{ print length, $0 }' | sort -n | cut -d' ' -f2 | \
    head -n 1 | xargs || true)"
  if [ -z "$python_sh_path" ]; then
    printf "ERROR: Failed to auto-find python.sh file. Exiting.\n"
    exit 1
  fi
  printf "Guessed: $python_sh_path\n"
fi

# Run our simulator script through Isaac Sim's python.sh Python environment
# NOTE: we have to use environment variables due to bug in how python.sh
# handles arguments
# TODO support object labels argument
BENCHBOT_MAP_PATH="$map_path" \
  BENCHBOT_ROBOT_PATH="$robot_path" \
  BENCHBOT_START_POSE="$start_pose" \
  "$python_sh_path" "$(dirname "$abs_path")/run.py"
